Imports System
Imports System.IO

' Person Klasse
Public Class Person
    Public Property Name As String
    Public Property Age As Integer
    Public Property City As String

    Public Sub New(name As String, age As Integer, city As String)
        Me.Name = name
        Me.Age = age
        Me.City = city
    End Sub
End Class

' Datenbank Klasse
Public Class Database
    Private records As New List(Of Person)()

    Public Sub AddPerson(person As Person)
        records.Add(person)
        Console.WriteLine($"Person added: {person.Name}, {person.Age}, {person.City}")
    End Sub

    Public Sub RemovePerson(name As String)
        Dim personToRemove = records.Find(Function(p) p.Name = name)
        If personToRemove IsNot Nothing Then
            records.Remove(personToRemove)
            Console.WriteLine($"Person removed: {personToRemove.Name}")
        Else
            Console.WriteLine("Person not found.")
        End If
    End Sub

    Public Sub ListPeople()
        If records.Count = 0 Then
            Console.WriteLine("No records found.")
        Else
            For Each person In records
                Console.WriteLine($"{person.Name}, {person.Age}, {person.City}")
            Next
        End If
    End Sub

    Public Sub EditPerson(name As String)
        Dim personToEdit = records.Find(Function(p) p.Name = name)
        If personToEdit IsNot Nothing Then
            Console.WriteLine($"Editing Person: {personToEdit.Name}, {personToEdit.Age}, {personToEdit.City}")
            Console.WriteLine("Enter new Name (leave empty to keep current):")
            Dim newName As String = Console.ReadLine()
            Console.WriteLine("Enter new Age (leave empty to keep current):")
            Dim newAgeStr As String = Console.ReadLine()
            Console.WriteLine("Enter new City (leave empty to keep current):")
            Dim newCity As String = Console.ReadLine()

            If Not String.IsNullOrEmpty(newName) Then personToEdit.Name = newName
            If Not String.IsNullOrEmpty(newAgeStr) Then personToEdit.Age = Integer.Parse(newAgeStr)
            If Not String.IsNullOrEmpty(newCity) Then personToEdit.City = newCity

            Console.WriteLine($"Person updated: {personToEdit.Name}, {personToEdit.Age}, {personToEdit.City}")
        Else
            Console.WriteLine("Person not found.")
        End If
    End Sub

    Public Sub SaveToFile(fileName As String)
        Dim lines = records.Select(Function(p) $"{p.Name},{p.Age},{p.City}").ToArray()
        File.WriteAllLines(fileName, lines)
        Console.WriteLine($"Data saved to file {fileName}")
    End Sub

    Public Sub LoadFromFile(fileName As String)
        If File.Exists(fileName) Then
            Dim lines = File.ReadAllLines(fileName)
            records.Clear()
            For Each line In lines
                Dim parts = line.Split(","c)
                records.Add(New Person(parts(0), Integer.Parse(parts(1)), parts(2)))
            Next
            Console.WriteLine($"Data loaded from file {fileName}")
        Else
            Console.WriteLine("File not found.")
        End If
    End Sub

    Public Sub SortPeople()
        records.Sort(Function(p1, p2) p1.Name.CompareTo(p2.Name))
        Console.WriteLine("People sorted by Name.")
    End Sub

    Public Sub SearchByCity(city As String)
        Dim result = records.Where(Function(p) p.City.Contains(city)).ToList()
        If result.Count = 0 Then
            Console.WriteLine($"No people found in city: {city}")
        Else
            For Each person In result
                Console.WriteLine($"{person.Name}, {person.Age}, {person.City}")
            Next
        End If
    End Sub
End Class

' Eingabefunktion zur Validierung von Zahlen
Public Module Program
    Public Sub Main()
        Dim db As New Database()
        MainLoop(db)
    End Sub

    Public Sub MainLoop(db As Database)
        Console.WriteLine(vbCrLf & "Select an option:")
        Console.WriteLine("1. Add Person")
        Console.WriteLine("2. List People")
        Console.WriteLine("3. Remove Person")
        Console.WriteLine("4. Edit Person")
        Console.WriteLine("5. Save Data to File")
        Console.WriteLine("6. Load Data from File")
        Console.WriteLine("7. Sort People")
        Console.WriteLine("8. Search by City")
        Console.WriteLine("9. Exit")
        Dim choice As String = Console.ReadLine()

        Select Case choice
            Case "1"
                ' Add Person
                Console.WriteLine("Enter Name:")
                Dim name As String = Console.ReadLine()
                Console.WriteLine("Enter Age:")
                Dim age As Integer = Integer.Parse(Console.ReadLine())
                Console.WriteLine("Enter City:")
                Dim city As String = Console.ReadLine()
                Dim person As New Person(name, age, city)
                db.AddPerson(person)
                MainLoop(db)

            Case "2"
                ' List People
                db.ListPeople()
                MainLoop(db)

            Case "3"
                ' Remove Person
                Console.WriteLine("Enter Name of person to remove:")
                Dim name As String = Console.ReadLine()
                db.RemovePerson(name)
                MainLoop(db)

            Case "4"
                ' Edit Person
                Console.WriteLine("Enter Name of person to edit:")
                Dim name As String = Console.ReadLine()
                db.EditPerson(name)
                MainLoop(db)

            Case "5"
                ' Save Data to File
                Console.WriteLine("Enter file name to save data:")
                Dim fileName As String = Console.ReadLine()
                db.SaveToFile(fileName)
                MainLoop(db)

            Case "6"
                ' Load Data from File
                Console.WriteLine("Enter file name to load data from:")
                Dim fileName As String = Console.ReadLine()
                db.LoadFromFile(fileName)
                MainLoop(db)

            Case "7"
                ' Sort People
                db.SortPeople()
                MainLoop(db)

            Case "8"
                ' Search by City
                Console.WriteLine("Enter City to search for:")
                Dim city As String = Console.ReadLine()
                db.SearchByCity(city)
                MainLoop(db)

            Case "9"
                ' Exit
                Console.WriteLine("Exiting...")
                Exit Sub

            Case Else
                ' Invalid Input
                Console.WriteLine("Invalid choice, try again.")
                MainLoop(db)
        End Select
    End Sub
End Module
